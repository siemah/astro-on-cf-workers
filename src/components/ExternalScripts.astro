---
import { extractPixelId, isScriptTag } from '@/lib/pixels/meta';

export interface Props {
  facebookPixelIds?: string[];
  tiktokPixelIds?: string[];
  googleAnalyticIds?: string[];
}

const { facebookPixelIds = [], tiktokPixelIds = [], googleAnalyticIds = [] } = Astro.props;
const fbPixelIdList = facebookPixelIds?.map(extractPixelId)?.filter(Boolean) ?? [];
---

{facebookPixelIds.map((pixelData) => {
  let pixelId = extractPixelId(pixelData);
    return (
      <Fragment>
        <script
        is:inline
        set:html={`
          !function(f,b,e,v,n,t,s)
          {if(f.fbq)return;n=f.fbq=function(){n.callMethod?
          n.callMethod.apply(n,arguments):n.queue.push(arguments)};
          if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';
          n.queue=[];t=b.createElement(e);t.async=!0;
          t.src=v;s=b.getElementsByTagName(e)[0];
          s.parentNode.insertBefore(t,s)}(window, document,'script',
          'https://connect.facebook.net/en_US/fbevents.js');
          fbq('init', ${pixelId});
          fbq('track', 'PageView');
        `}
        ></script>
        <noscript>
          <img height="1" width="1" style="display:none"
            src={`https://www.facebook.com/tr?id=${pixelId}&ev=PageView&noscript=1`}
          />
        </noscript>
      </Fragment>
    );
  // }
})}
<meta name="facebook-pixel-id" content={JSON.stringify(fbPixelIdList)} />

{tiktokPixelIds.map((pixelData) => {
  if (isScriptTag(pixelData)) {
    // If it's a full script, render it as-is
    return <Fragment is:inline set:html={pixelData} />;
  } else {
    // If it's just an ID, create the pixel script
    const pixelId = pixelData;
    return (
      <Fragment>
        <script is:inline define:vars={{ pixelId }}>
          !function (w, d, t) {
            w.TiktokAnalyticsObject=t;var ttq=w[t]=w[t]||[];ttq.methods=["page","track","identify","instances","debug","on","off","once","ready","alias","group","enableCookie","disableCookie"],ttq.setAndDefer=function(t,e){t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}};for(var i=0;i<ttq.methods.length;i++)ttq.setAndDefer(ttq,ttq.methods[i]);ttq.instance=function(t){for(var e=ttq._i[t]||[],n=0;n<ttq.methods.length;n++
            )ttq.setAndDefer(e,ttq.methods[n]);return e};ttq.load=function(e,n){var i="https://analytics.tiktok.com/i18n/pixel/events.js";ttq._i=ttq._i||{},ttq._i[e]=[],ttq._i[e]._u=i,ttq._t=ttq._t||{},ttq._t[e]=+new Date,ttq._o=ttq._o||{},ttq._o[e]=n||{};n=document.createElement("script");n.type="text/javascript",n.async=!0,n.src=i+"?sdkid="+e+"&lib="+t;e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(n,e)};

            ttq.load(pixelId);
            ttq.page();
          }(window, document, 'ttq');
        </script>
      </Fragment>
    );
  }
})}

{googleAnalyticIds.map((analyticsData) => {
  if (isScriptTag(analyticsData)) {
    // If it's a full script, render it as-is
    return <Fragment is:inline set:html={analyticsData} is:raw />;
  } else {
    // If it's just an ID, create the analytics script
    const analyticsId = analyticsData;
    return (
      <Fragment>
        <script async is:inline src={`https://www.googletagmanager.com/gtag/js?id=${analyticsId}`}></script>
        <script is:inline define:vars={{ analyticsId }}>
          window.dataLayer = window.dataLayer || [];
          function gtag(){window.dataLayer.push(arguments);}
          gtag('js', new Date());
          gtag('config', analyticsId);
        </script>
      </Fragment>
    );
  }
})}
